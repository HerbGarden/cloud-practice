#! /bash/bin
report(){
	echo "*************** system check report ******************************"
	echo "* 점검자: 김명수 - `whoami`     "
	echo "* 점검일시 및 시간: `date`    "
	echo "* 점검 서버 이름: $HOSTNAME   "
	echo "******************************************************************"
	echo
}

hw(){
	echo "------------- Hardware check -----------------------------"
	
	echo
	model_name=`grep -m 1 "model name" /proc/cpuinfo`
	core=`grep proce /proc/cpuinfo | wc -l`
	echo "cpu"
	echo "$model_name"
	echo "코어 갯수 : $core"
	total_mem=`free -h | grep Mem  |awk '{print $2}'`
	use_mem=`free -h | grep Mem  |awk '{print $3}'`
	echo
	echo "ram"
	echo "전체메모리 크기 : $total_mem"
	echo "사용중인 메모리 크기 : $use_mem"
	echo "swap"
	free -h | grep total
	free -h | grep Swap
	echo
	echo "LVM 설정정보"
	echo "pv 장치 이름 : pv 장치 크기 "
	pvs | awk '{print $1"\t"$5}'| grep -v PV
	echo "vg 장치 이름 : vg 장치 크기 "
	vgs | awk '{print $1"\t\t"$6}'| grep -v VG
	echo "lv 장치 이름 : lv 장치 크기 "
	lvs | awk '{print $1"\t\t"$4}'| grep -v LV
	echo
	
}	
################disk###############################
disk(){
	echo "------------- Disk check -----------------------------"
	
	echo
	echo "disk 정보"
	disk_name=`lsblk | grep disk | awk '{print $1}'`
	count=`lsblk | grep disk | awk '{print $1}'|wc -l`
	for i in `seq 1 $count`
	do
		name=($disk_name)
		test1=`file -s "/dev/${name[$(($i-1))]}" | grep data`
		if [ "$test1" != "data" ]
		then
			echo "사용중인 장치이름 : ${name[$(($i-1))]}"
			echo
			echo "사용중인 ${name[$(($i-1))]}장치의 파티션"
			echo "`fdisk /dev/${name[$(($i-1))]} -l | grep ${name[$(($i-1))]}`"
		fi
	done
	for i in `seq 1 $count`
	do
		name=($disk_name)
		echo
		echo "사용중인 ${name[$(($i-1))]}장치의 파티션 정보"
		c=`cat /proc/partitions | grep ${name[$(($i-1))]} | grep -vw ${name[$(($i-1))]} | wc -l`
		for j in `seq 1 $c`
		do
			echo "`fdisk /dev/${name[$(($i-1))]}$j -l`"
			echo
		done
	done
	
	all=`df -P | grep -v ^Filesystem | awk '{sum += $2} END { print sum/1024/1024 " GB" }'`
	echo "사용중인 디스크 전체 크기 : $all "
	use=`df -P | grep -v ^Filesystem | awk '{sum += $3} END { print sum/1024/1024 " GB" }'`
	echo "사용중인 디스크 사용량 : $use "
	left=`df -P | grep -v ^Filesystem | awk '{sum += $4} END { print sum/1024/1024 " GB" }'`
	echo "사용중인 디스크 남은 용량 : $left"
	echo
	qu=`mount | grep -v noquota | grep quota | wc -l`
	if [ "$qu" != "0" ]
	then
		echo "쿼터 사용 여부 : 사용중!"
	else
		echo "쿼터 사용 여부 : 사용하지 않음!"
	fi
	echo
}
############################################################################3
################log#############################################
log(){
	echo "------------- Log check -----------------------------"
	
	echo
	echo "[접속기록]"
	echo "최근 ssh 기록"
	echo "`cat /var/log/secure | grep ssh | tail -n 5`"
	echo
	echo "최근 messages 기록"
	echo "`tail -n 5 /var/log/messages`"
	echo
	echo "최근 crontab 기록"
	echo "`tail -n 5 /var/log/cron`"
	echo
}
############################################################################3
#################################user######################################3
user(){
	echo "------------- User check -----------------------------"
	
	echo
	echo "[사용자 접속기록]"
	echo "`w`"
	echo
	user=`ls /home/`
	user_arr=($user)
	home_size=`du -s /home/ | awk '{print $1}'`
	let count="${#user_arr[*]}-1"
	echo "사용자별 홈디렉토리 사용량"
	echo "사용자 : 크기 : 사용률"
	for i in `seq 0 $count`
	do
		u=${user_arr[$i]}
		msize=`du -mhs /home/$u/ | awk '{print $1}'`
		size=`du -s /home/$u/ | awk '{print $1}'`
		per=`echo "scale=1;(${size}/${home_size})*100" | bc`
		echo "$u : $msize : ${per}%"
	done
	echo
}
############################################################################3
#####################os / software###########################################3
os(){
	echo "------------- OS/Software check -----------------------------"
	
	echo
	echo "os : `cat /etc/redhat-release`"
	echo "bash : `bash --version | grep -m 1 version`"
	sshd=`rpm -qa openssh-server`
	echo "sshd : $sshd"
	echo
}
############################################################################3
###################################secure#################################3
secure(){
	echo "------------- Secure check -----------------------------"
	
	echo
	firewall-cmd --list-all
	echo
	echo -n "selinux 상태 :"
	getenforce
}
#이름 축소하기
case $1 in	
	"hw")
		report 
		hw 
		;;
	"disk")
		report 
		disk
		;;
	"log")
		report 
		log
		;;
	"user")
		report 
		user
		;;
	"os")
		report 
		os
		;;
	"secure")
		report 
		secure
		;;
	*)
		report > system_check_report
		hw >> system_check_report
		disk >> system_check_report
		log >> system_check_report
		user >> system_check_report
		os >> system_check_report
		secure >> system_check_report
		;;
esac
